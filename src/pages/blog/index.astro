---
import Layout from "../../layouts/Layout.astro";
import FeaturedPost from "../../components/FeaturedPost.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";

import { useStoryblokApi } from "@storyblok/astro";
import { mergeHeadConfig } from "../../components/Head/headConfig";
import { siteConfig } from "../../config/config";
import PostListItem from "../../components/PostListItem.astro";
import type { PostStoryblok } from "../../../component-types-sb";

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get("cdn/stories/", {
  content_type: "post",
  sort_by: "first_published_at:desc",
  resolve_relations: "post.category",
  version: import.meta.env.DEV ? "draft" : "published",
});

const [featuredPost, ...posts] = data.stories as PostStoryblok[];
---

<Layout headConfig={mergeHeadConfig({ title: "Blog - " + siteConfig.title })}>
  <header class="[ flow ]">
    <h1>Blog</h1>
    <Breadcrumbs location="Blog" />
    <p>
      {siteConfig.description}
    </p>
  </header>
  <main class="[ flow flow-space-s ]">
    <FeaturedPost
      slug={featuredPost.slug}
      title={featuredPost.name}
      publishedAt={featuredPost.first_published_at ||
        featuredPost.published_at ||
        featuredPost.created_at}
      description={featuredPost.content?.description}
      category={featuredPost.content?.category}
      cover={featuredPost.content?.cover}
    />
    {
      posts.map((p) => (
        <PostListItem
          title={p.name}
          description={p.content?.description}
          src={p.content?.cover.filename}
          alt={p.content?.cover.alt}
          slug={p.slug}
          publishedAt={p.first_published_at || p.published_at || p.created_at}
          hue={p.content?.category.content.hue}
          category={p.content?.category.name}
        />
      ))
    }
  </main>
</Layout>
