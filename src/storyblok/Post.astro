---
import PostHeader from "../components/PostHeader.astro";
import Byline from "../components/Byline.astro";
import Blockquote from "../storyblok/Blockquote.astro";
import BlogImage from "../storyblok/BlogImage.astro";
import Breadcrumbs from "../components/Breadcrumbs.astro";
import { storyblokEditable } from "@storyblok/astro";
import RichTextRenderer from "storyblok-rich-text-astro-renderer/RichTextRenderer.astro";
import type { Props as RTProps } from "storyblok-rich-text-astro-renderer/RichTextRenderer.astro";
import { Code } from "astro:components";
import Blogtable from "./Blogtable.astro";

const richTextBaseProps: RTProps = {
  content: Astro.props.story.content.content,
  schema: {
    nodes: {
      code_block: ({ attrs, content }) => ({
        component: Code, // native Astro Code component
        props: {
          lang: attrs.class?.split("-")[1],
          theme: "dark-plus",
          code: content?.[0].text,
        },
      }),
    },
  },
  resolver: (blok: any) => {
    if (blok.component === "blogimage") {
      return {
        component: BlogImage,
        props: {
          src: blok.src?.filename,
          alt: blok.alt,
          title: blok.title,
          attribution: blok.copyright,
          source: blok.source,
          annotations: blok.annotations,
        },
      };
    }
    if (blok.component === "blockquote") {
      return {
        component: Blockquote,
        props: { ...blok },
      };
    }
    if (blok.component === "blogtable") {
      return {
        component: Blogtable,
        props: {
          title: blok.title,
          thead: blok.content.thead.map((cell: any) => cell.value),
          tbody: blok.content.tbody.map((row: any) =>
            row.body.map((cell: any) => cell.value)
          ),
        },
      };
    }
    // fallback
    return {
      component: "div",
      children: blok.content,
    };
  },
  ...storyblokEditable(Astro.props.story.content),
};

const richTextProps = {
  ...richTextBaseProps,
  class: "[ flow ]",
};
---

<article class="[ flow ]">
  <PostHeader
    title={Astro.props.story.name}
    src={Astro.props.story.content.cover.filename}
    credit={Astro.props.story.content.cover.source}
    alt={Astro.props.story.content.cover.alt}
  />
  <Breadcrumbs
    crumbs={[{ label: "Blog", path: "/blog" }]}
    location={Astro.props.story.name}
  />
  <Byline
    publicationDate={Astro.props.story.published_at ||
      Astro.props.story.created_at}
    categoryName={Astro.props.story.content.category.name}
  />
  <RichTextRenderer {...richTextProps} />
</article>
